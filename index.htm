<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="styles.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<body>
  
  <script src="jquery.js"></script>
  <img class="img" src="Cooper_Band.jpg">
  <img class="img" src="Cooper_Football.jpg" style="animation-delay: 1.34s;">
  <img class="img" src="Cooper_Freshmen.jpg" style="animation-delay: 2.04s;">
  <img class="img" src="Cooper_Catch.jpg" style="animation-delay: 2.74s;">
  <img class="img" src="IMG_1098.JPG" style="animation-delay: 4.62s;">
  <img class="img" src="IMG_6033.JPG" style="animation-delay: 5.72s;">
  <img class="img" src="IMG_6097.JPG" style="animation-delay: 6.82s;">
  <img class="img" src="IMG_8434.JPG" style="animation-delay: 8.23s;">
  <img class="img2" src="IMG_6056.JPG">
  <img class="img2" src="IMG_6192.JPG" style="animation-delay: 2.913s;">
  <img class="img2" src="IMG_8406.JPG" style="animation-delay: 4.23s;">
  <img class="img2" src="IMG_8462.JPG" style="animation-delay: 5.55s;">
  <img class="img2" src="IMG_8476.JPG" style="animation-delay: 6.95s;">
  <img class="img2" src="IMG_6182.JPG" style="animation-delay: 8.41s; height: 250px;">
  <table style="width:100%; vertical-align:top;">
    <tr>
      <th><div class="v1"></div></th>
      <th>
        <h1>Welcome to E-Guidance!</h1>
          <form action="">
            <input type="text" id="firstname" name="firstname" placeholder="First name" autocomplete="off" required>
            <br><br>
            <input type="text" id="lastname" name="lastname" placeholder="Last name" autocomplete="off" required>
            <br><br>
            Grade:<br>
            <select id="grade" name="Grade" required>
	      <option value="" selected="selected"></option>
              <option value="9th">Freshman</option>
              <option value="10th">Sophmore</option>
              <option value="11th">Junior</option>
              <option value="12th">Senior</option>
            </select>
	          <br><br>
              Reason:<br>
	      
              <select class="medium" id="elementreg" name="reason" required>
                <option value="" selected="selected"></option>
                <option value="Academic">Academic</option>
                <option value="College">College</option>
                <option value="Scheduling">Scheduling</option>
                <option value="Other">Other</option>
             </select>

             <div class="types" id="Other">
	      <br>
              <input type="text" id="reason" name="otherReason" value="null" placeholder="Reason" autocomplete="off">
	     </div>
           <br><br>
          <button type="submit" onclick="addStudent(document.getElementById('firstname').value, document.getElementById('lastname').value, document.getElementById('grade').value, document.getElementById('elementreg').value, document.getElementById('reason').value);">Submit</button>
        </form>
      </th>
      <th><div class="v2"></div></th>
    </tr>
  </table>

<!--Initializes Firebase-->
<script src="https://www.gstatic.com/firebasejs/5.5.1/firebase.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-database.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.4.1/firebase-auth.js"></script>
<script>
  var config = {
    apiKey: "AIzaSyB5J9tz76zMckrTpxOWCTghBJ-rSkX5R7I",
    authDomain: "guidance-48a92.firebaseapp.com",
    databaseURL: "https://guidance-48a92.firebaseio.com",
    projectId: "guidance-48a92",
    storageBucket: "guidance-48a92.appspot.com",
    messagingSenderId: "741937370677"
  };
  firebase.initializeApp(config);
</script>

<!--Sends Information to Firebase-->
<script>
  var database = firebase.database();
  function addStudent(firstname, lastname, grade, problem, reason) {
    if (firstname!="" && lastname!="" && grade!="" && problem!="") {
      if(problem==="Other" && reason!="") {
        firebase.database().ref('users/' + lastname + ', ' + firstname).set({
          Year: grade,
          Issue: reason
        });
      }
      else {
        firebase.database().ref('users/' + lastname + ', ' + firstname).set({
          Year: grade,
          Issue: problem
        });
      }
    }
  }
</script>

<script>
$("#elementreg").on("change", function() {
  var val = $(this).val();
  $(".types").hide().find('input:text').val(''); // hide and empty
  if (val) $("#" + val).show();
});
</script>
<script>
var x, i, j, selElmnt, a, b, c;
/*look for any elements with the class "custom-select":*/
x = document.getElementsByClassName("custom-select");
for (i = 0; i < x.length; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  /*for each element, create a new DIV that will act as the selected item:*/
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /*for each element, create a new DIV that will contain the option list:*/
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < selElmnt.length; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
        /*when an item is clicked, update the original select box,
        and the selected item:*/
        var y, i, k, s, h;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        h = this.parentNode.previousSibling;
        for (i = 0; i < s.length; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            for (k = 0; k < y.length; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
      /*when the select box is clicked, close any other select boxes,
      and open/close the current select box:*/
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
  });
}
function closeAllSelect(elmnt) {
  /*a function that will close all select boxes in the document,
  except the current select box:*/
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
document.addEventListener("click", closeAllSelect);
</script>
</body>
</html>
